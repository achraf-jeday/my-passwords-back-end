<?php

/**
 * @file
 * Install, update and uninstall functions for the standard installation profile.
 */

/**
 * Implements hook_install().
 *
 * Perform actions to set up the site for this profile.
 *
 * @see system_install()
 */
function password_locker_starter_kit_install() {
  include_once DRUPAL_ROOT . '/core/profiles/standard/standard.install';
  standard_install();
}

/**
 * Enable SEO modules and import configuration.
 */
function password_locker_starter_kit_update_9001() {
  // Enable modules.
  \Drupal::service('module_installer')->install([
    'google_analytics',
    'hreflang',
    'metatag',
    'password_locker_updates',
    'pathauto',
    'redirect',
    'redirect_404',
    'schema_metatag',
    'seo_checklist',
    'simple_sitemap',
    'simple_sitemap_engines',
  ]);
  // Import configuration.
  $update_service = \Drupal::service('password_locker_updates.update_helper');
  $update_service->updateConfigs(
    [
      'checklistapi.progress.seo_checklist',
      'core.entity_view_mode.block.token',
      'core.entity_view_mode.block_content.token',
      'core.entity_view_mode.comment.token',
      'core.entity_view_mode.contact_message.token',
      'core.entity_view_mode.file.token',
      'core.entity_view_mode.menu_link_content.token',
      'core.entity_view_mode.node.token',
      'core.entity_view_mode.path_alias.token',
      'core.entity_view_mode.shortcut.token',
      'core.entity_view_mode.taxonomy_term.token',
      'core.entity_view_mode.tour.token',
      'core.entity_view_mode.user.token',
      'google_analytics.settings',
      'metatag.metatag_defaults.403',
      'metatag.metatag_defaults.404',
      'metatag.metatag_defaults.front',
      'metatag.metatag_defaults.global',
      'metatag.metatag_defaults.node',
      'metatag.metatag_defaults.taxonomy_term',
      'metatag.metatag_defaults.user',
      'pathauto.settings',
      'redirect.settings',
      'redirect_404.settings',
      'simple_sitemap.custom_links.default',
      'simple_sitemap.settings',
      'simple_sitemap.sitemap.default',
      'simple_sitemap.type.default_hreflang',
      'simple_sitemap_engines.settings',
      'simple_sitemap_engines.simple_sitemap_engine.bing',
      'simple_sitemap_engines.simple_sitemap_engine.google',
      'system.action.pathauto_update_alias_node',
      'system.action.pathauto_update_alias_user',
      'system.action.redirect_delete_action',
      'user.role.authenticated',
      'views.view.redirect',
      'views.view.redirect_404',
    ],
    'password_locker_starter_kit'
  );
}

/**
 * Enable custom module 'password_locker_entities'.
 */
function password_locker_starter_kit_update_9002() {
  \Drupal::service('module_installer')->install(['password_locker_entities']);
}

/**
 * Import password form and passwords list view configuration.
 */
function password_locker_starter_kit_update_9003() {
  $update_service = \Drupal::service('password_locker_updates.update_helper');
  $update_service->updateConfigs(
    [
      'field.storage.password.field_email',
      'field.storage.password.field_link',
      'field.storage.password.field_notes',
      'field.storage.password.field_password',
      'field.storage.password.field_user_id',
      'field.field.password.password.field_email',
      'field.field.password.password.field_link',
      'field.field.password.password.field_notes',
      'field.field.password.password.field_password',
      'field.field.password.password.field_user_id',
      'core.entity_form_display.password.password.default',
      'views.view.my_passwords',
    ],
    'password_locker_starter_kit'
  );
}

/**
 * Enable new sub-theme 'password_locker_theme' and import configuration.
 */
function password_locker_starter_kit_update_9004() {
  \Drupal::service('theme_installer')->install(['password_locker_theme']);
  $update_service = \Drupal::service('password_locker_updates.update_helper');
  $update_service->updateConfigs(
    [
      'block.block.password_locker_theme_account_menu',
      'block.block.password_locker_theme_branding',
      'block.block.password_locker_theme_breadcrumbs',
      'block.block.password_locker_theme_content',
      'block.block.password_locker_theme_footer',
      'block.block.password_locker_theme_help',
      'block.block.password_locker_theme_local_actions',
      'block.block.password_locker_theme_local_tasks',
      'block.block.password_locker_theme_main_menu',
      'block.block.password_locker_theme_messages',
      'block.block.password_locker_theme_page_title',
      'block.block.password_locker_theme_powered',
      'block.block.password_locker_theme_search',
      'block.block.password_locker_theme_tools',
      'core.entity_view_display.user.user.compact',
      'password_locker_theme.settings',
      'pathauto.pattern.nodes',
      'system.theme',
    ],
    'password_locker_starter_kit'
  );
}

/**
 * Enable module 'CKEditor CodeSnippet' and import configuration.
 */
function password_locker_starter_kit_update_9005() {
  \Drupal::service('module_installer')->install(['codesnippet']);
  $update_service = \Drupal::service('password_locker_updates.update_helper');
  $update_service->updateConfigs(
    [
      'filter.format.basic_html',
      'editor.editor.basic_html',
      'filter.format.full_html',
      'editor.editor.full_html',
    ],
    'password_locker_starter_kit'
  );
}

/**
 * Enable API modules.
 */
function password_locker_starter_kit_update_9006() {
  \Drupal::service('module_installer')->install(
    [
      'jsonapi_extras',
      'paragraphs',
      'consumers',
      'simple_oauth',
      'subrequests',
    ]
  );
}

/**
 * Import API configuration.
 */
function password_locker_starter_kit_update_9007() {
  $update_service = \Drupal::service('password_locker_updates.update_helper');
  $update_service->updateConfigs(
    [
      'jsonapi.settings',
      'jsonapi_extras.jsonapi_resource_config.password--password',
      'jsonapi_extras.settings',
      'simple_oauth.settings',
      'system.action.user_add_role_action.customer',
      'system.action.user_remove_role_action.customer',
      'user.role.customer',
    ],
    'password_locker_starter_kit'
  );
}

/**
 * Update mail settings.
 */
function password_locker_starter_kit_update_9008() {
  $update_service = \Drupal::service('password_locker_updates.update_helper');
  $update_service->updateConfigs(
    [
      'system.site',
      'user.mail',
      'user.settings',
    ],
    'password_locker_starter_kit'
  );
}

/**
 * Enable REST modules and import configuration.
 */
function password_locker_starter_kit_update_9009() {
  \Drupal::service('module_installer')->install(
    [
      'rest',
      'restui',
    ]
  );
  $update_service = \Drupal::service('password_locker_updates.update_helper');
  $update_service->updateConfigs(
    [
      'rest.resource.user_registration',
      'user.role.anonymous',
    ],
    'password_locker_starter_kit'
  );
}

/**
 * Enable module 'rest_password' and import configuration.
 */
function password_locker_starter_kit_update_9010() {
  \Drupal::service('module_installer')->install(
    [
      'rest_password',
    ]
  );
  $update_service = \Drupal::service('password_locker_updates.update_helper');
  $update_service->updateConfigs(
    [
      'rest.resource.lost_password_reset',
      'rest.resource.lost_password_resource',
      'user.mail',
      'user.settings',
    ],
    'password_locker_starter_kit'
  );
}

/**
 * Disable default account email verification and update 'anonymous' role.
 */
function password_locker_starter_kit_update_9011() {
  $update_service = \Drupal::service('password_locker_updates.update_helper');
  $update_service->updateConfigs(
    [
      'user.mail',
      'user.role.anonymous',
      'user.settings',
    ],
    'password_locker_starter_kit'
  );
}

/**
 * Enable module 'password_locker_rest' and import configuration.
 */
function password_locker_starter_kit_update_9012() {
  \Drupal::service('module_installer')->install(
    [
      'password_locker_rest',
    ]
  );
  $update_service = \Drupal::service('password_locker_updates.update_helper');
  $update_service->updateConfigs(
    [
      'rest.resource.entity.user',
      'user.role.customer',
    ],
    'password_locker_starter_kit'
  );
}

/**
 * Update configuration: Rest 'rest.resource.packing_key' and customer role.
 */
function password_locker_starter_kit_update_9013() {
  $update_service = \Drupal::service('password_locker_updates.update_helper');
  $update_service->updateConfigs(
    [
      'rest.resource.packing_key',
      'user.role.customer',
    ],
    'password_locker_starter_kit'
  );
}

/**
 * Update the base definition (max_length) of field name of the password entity type.
 */
function password_locker_starter_kit_update_9014() {
  $entity_definition_update_manager = \Drupal::service('entity.definition_update_manager');
  $field_definition = $entity_definition_update_manager->getFieldStorageDefinition('name', 'password');
  $field_definition->setSetting('max_length', 255);
  $entity_definition_update_manager->updateFieldStorageDefinition($field_definition);
}

/**
 * Enable custom module 'password_locker_main' and contrib module 'memcache_storage'.
 */
function password_locker_starter_kit_update_9015() {
  \Drupal::service('module_installer')->install(
    [
      'password_locker_main',
      'memcache_storage',
    ]
  );
}

/**
 * Update configuration: 'jsonapi_extras.jsonapi_resource_config.password--password'.
 */
function password_locker_starter_kit_update_9016() {
  $update_service = \Drupal::service('password_locker_updates.update_helper');
  $update_service->updateConfigs(
    [
      'jsonapi_extras.jsonapi_resource_config.password--password',
    ],
    'password_locker_starter_kit'
  );
}
